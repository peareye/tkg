// Layout SCSS

// Section Styles
.section {
 padding-block: $spacer * 4;
 width        : 100%;

 &:nth-child(even) {
  @include dc(neutral(2));

 }

 &:first-of-type {
  padding-block-start: calc($spacer * 2);

  >*+* {
   // margin-block-start: calc($spacer * .5);
  }

 }

 &--aboutBlock {
  row-gap: calc($spacer * 2);

 }

 &--textBlock {}

 &--servicesBlock {}

 &--aboutBlock {}

 &--carouselBlock {
  margin-block-end: calc($spacer * 3);
 }

 &--imageBlock {}

 &--contactBlock {}

 &--inspectionBlock {
  >* {
   >*+* {
    margin-block: calc($spacer * 3);
   }

   li {
    margin-inline-start: $spacer;
   }

  }

 }
}


// Grid Layout

[class*="grid-"] {
 display: grid;
 gap    : $spacer calc($spacer * 2);
}

.grid- {
 &section {
  grid-template-columns: calc($spacer / 2) auto calc($spacer / 2);

  >* {
   width        : min(100%, $wide-container-width);
   margin-inline: auto;

   grid-column: 2 / 3;
  }
 }

 &even-columns {
  // children will not expand to fill space. They will maintain a 250px width at full screen.
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));

 }

 &three-columns {
  // children will expand to fill space if there are not enough items to fill full screen space. Should not be more than 3 items total.
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));

 }

 &stacked {
  grid-template-columns: auto 1fr;

  >* {
   grid-row   : 1 / 2;
   grid-column: 1 / 3;
  }
 }
}

// Flex Layouts 

[class*="flex-"] {
 display: flex;
 gap    : calc($spacer * 2);
}

.flex- {
 &two-columns {
  flex-direction: row;
  flex-wrap     : wrap;
  row-gap       : calc($spacer * 0);

  &:nth-child(even) {
   flex-direction: row-reverse;
  }

  >* {
   flex: 1 1 20em;
  }
 }
}